// ==============================================================
// RTL generated by Scout HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.0
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_Border_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_Border_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_Border_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_state1 = "1";
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_state2 = "10";
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_state3 = "100";
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<6> Loop_Border_proc::ap_ST_fsm_state10 = "100000";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_Border_proc::ap_const_boolean_1 = true;
const sc_lv<1> Loop_Border_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_Border_proc::ap_const_lv1_1 = "1";
const sc_lv<2> Loop_Border_proc::ap_const_lv2_0 = "00";
const sc_lv<2> Loop_Border_proc::ap_const_lv2_2 = "10";
const sc_lv<2> Loop_Border_proc::ap_const_lv2_3 = "11";
const sc_lv<2> Loop_Border_proc::ap_const_lv2_1 = "1";
const bool Loop_Border_proc::ap_const_boolean_0 = false;
const sc_lv<32> Loop_Border_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_1 = "1";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_3 = "11";
const sc_lv<64> Loop_Border_proc::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFF5 = "11111111111111111111111111110101";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFFA = "11111111111111111111111111111010";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_FFFFFFFB = "11111111111111111111111111111011";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_5 = "101";
const sc_lv<64> Loop_Border_proc::ap_const_lv64_1 = "1";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_1 = "1";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_7FB = "11111111011";
const sc_lv<11> Loop_Border_proc::ap_const_lv11_6 = "110";
const sc_lv<32> Loop_Border_proc::ap_const_lv32_5 = "101";

Loop_Border_proc::Loop_Border_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    borderbuf_U = new Loop_Border_proc_borderbuf("borderbuf_U");
    borderbuf_U->clk(ap_clk);
    borderbuf_U->reset(ap_rst);
    borderbuf_U->address0(borderbuf_address0);
    borderbuf_U->ce0(borderbuf_ce0);
    borderbuf_U->we0(borderbuf_we0);
    borderbuf_U->d0(tmp_reg_561);
    borderbuf_U->address1(borderbuf_address1);
    borderbuf_U->ce1(borderbuf_ce1);
    borderbuf_U->q1(borderbuf_q1);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47 = new filter11x11_strm_mul_32ns_32ns_64_3_1<1,3,32,32,64>("filter11x11_strm_mul_32ns_32ns_64_3_1_U47");
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->clk(ap_clk);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->reset(ap_rst);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->din0(grp_fu_187_p0);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->din1(grp_fu_187_p1);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->ce(ap_var_for_const0);
    filter11x11_strm_mul_32ns_32ns_64_3_1_U47->dout(grp_fu_187_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln204_1_fu_261_p2);
    sensitive << ( i6_0_i_i_i_reg_159 );

    SC_METHOD(thread_add_ln204_fu_255_p2);
    sensitive << ( indvar_flatten_reg_148 );

    SC_METHOD(thread_add_ln208_fu_203_p2);
    sensitive << ( height_read_reg_474 );

    SC_METHOD(thread_add_ln218_fu_193_p2);
    sensitive << ( width_read_reg_466 );

    SC_METHOD(thread_add_ln225_fu_198_p2);
    sensitive << ( width_read_reg_466 );

    SC_METHOD(thread_add_ln228_fu_397_p2);
    sensitive << ( select_ln204_reg_525_pp0_iter1_reg );

    SC_METHOD(thread_and_ln208_1_fu_296_p2);
    sensitive << ( icmp_ln208_5_fu_291_p2 );
    sensitive << ( icmp_ln208_4_fu_285_p2 );

    SC_METHOD(thread_and_ln208_fu_229_p2);
    sensitive << ( icmp_ln208_2_fu_224_p2 );
    sensitive << ( icmp_ln208_1_fu_218_p2 );

    SC_METHOD(thread_and_ln225_fu_424_p2);
    sensitive << ( icmp_ln225_reg_551_pp0_iter2_reg );
    sensitive << ( xor_ln223_fu_418_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op63_read_state6 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op63_read_state6 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op63_read_state6 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( dst_V_TREADY );
    sensitive << ( dst_V_1_state );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_predicate_op63_read_state6 );

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( dst_V_1_ack_in );
    sensitive << ( icmp_ln204_reg_516_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( dst_V_1_ack_in );
    sensitive << ( icmp_ln204_reg_516_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state5);
    sensitive << ( icmp_ln204_fu_250_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( dst_V_TREADY );
    sensitive << ( dst_V_1_state );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_predicate_op63_read_state6);
    sensitive << ( select_ln204_1_reg_533 );
    sensitive << ( icmp_ln211_reg_542 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( dst_V_TREADY );
    sensitive << ( dst_V_1_state );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_borderbuf_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln213_fu_354_p1 );

    SC_METHOD(thread_borderbuf_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( zext_ln228_fu_402_p1 );

    SC_METHOD(thread_borderbuf_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_borderbuf_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_borderbuf_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln204_1_reg_533_pp0_iter1_reg );
    sensitive << ( icmp_ln211_reg_542_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_dst_V_1_ack_in);
    sensitive << ( dst_V_1_state );

    SC_METHOD(thread_dst_V_1_ack_out);
    sensitive << ( dst_V_TREADY );

    SC_METHOD(thread_dst_V_1_data_out);
    sensitive << ( dst_V_1_payload_A );
    sensitive << ( dst_V_1_payload_B );
    sensitive << ( dst_V_1_sel );

    SC_METHOD(thread_dst_V_1_load_A);
    sensitive << ( dst_V_1_sel_wr );
    sensitive << ( dst_V_1_state_cmp_full );

    SC_METHOD(thread_dst_V_1_load_B);
    sensitive << ( dst_V_1_sel_wr );
    sensitive << ( dst_V_1_state_cmp_full );

    SC_METHOD(thread_dst_V_1_sel);
    sensitive << ( dst_V_1_sel_rd );

    SC_METHOD(thread_dst_V_1_state_cmp_full);
    sensitive << ( dst_V_1_state );

    SC_METHOD(thread_dst_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln204_reg_516_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_V_1_vld_out);
    sensitive << ( dst_V_1_state );

    SC_METHOD(thread_dst_V_TDATA);
    sensitive << ( dst_V_1_data_out );

    SC_METHOD(thread_dst_V_TDATA_blk_n);
    sensitive << ( dst_V_1_state );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln204_reg_516_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( icmp_ln204_reg_516_pp0_iter3_reg );

    SC_METHOD(thread_dst_V_TVALID);
    sensitive << ( dst_V_1_state );

    SC_METHOD(thread_grp_fu_187_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_187_p00 );

    SC_METHOD(thread_grp_fu_187_p00);
    sensitive << ( width_read_reg_466 );

    SC_METHOD(thread_grp_fu_187_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_187_p10 );

    SC_METHOD(thread_grp_fu_187_p10);
    sensitive << ( height_read_reg_474 );

    SC_METHOD(thread_height_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( height_empty_n );

    SC_METHOD(thread_height_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_icmp_ln204_fu_250_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_148 );
    sensitive << ( bound_reg_511 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln205_fu_245_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( width_read_reg_466 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln205_fu_241_p1 );

    SC_METHOD(thread_icmp_ln208_1_fu_218_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i6_0_i_i_i_reg_159 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln208_2_fu_224_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln208_reg_505 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln204_1_fu_208_p1 );

    SC_METHOD(thread_icmp_ln208_3_fu_279_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( add_ln204_1_fu_261_p2 );

    SC_METHOD(thread_icmp_ln208_4_fu_285_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( add_ln204_1_fu_261_p2 );

    SC_METHOD(thread_icmp_ln208_5_fu_291_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln208_reg_505 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln204_fu_267_p1 );

    SC_METHOD(thread_icmp_ln208_fu_212_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i6_0_i_i_i_reg_159 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln211_fu_328_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( vconv_xlim_loc_read_reg_480 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln204_1_fu_308_p3 );
    sensitive << ( zext_ln204_2_fu_316_p1 );

    SC_METHOD(thread_icmp_ln215_fu_367_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln204_reg_525_pp0_iter1_reg );
    sensitive << ( select_ln204_1_reg_533_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_icmp_ln218_fu_333_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln218_reg_495 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln204_1_fu_308_p3 );
    sensitive << ( zext_ln204_2_fu_316_p1 );

    SC_METHOD(thread_icmp_ln223_fu_413_p2);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln204_reg_516_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln204_reg_525_pp0_iter2_reg );

    SC_METHOD(thread_icmp_ln225_fu_338_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln225_reg_500 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln204_2_fu_316_p1 );

    SC_METHOD(thread_j_fu_343_p2);
    sensitive << ( select_ln204_fu_271_p3 );

    SC_METHOD(thread_l_edge_pix_fu_380_p3);
    sensitive << ( icmp_ln218_reg_546_pp0_iter1_reg );
    sensitive << ( r_edge_pix_fu_78 );
    sensitive << ( pix_out_fu_82 );

    SC_METHOD(thread_or_ln208_1_fu_302_p2);
    sensitive << ( icmp_ln208_3_fu_279_p2 );
    sensitive << ( and_ln208_1_fu_296_p2 );

    SC_METHOD(thread_or_ln208_fu_235_p2);
    sensitive << ( icmp_ln208_fu_212_p2 );
    sensitive << ( and_ln208_fu_229_p2 );

    SC_METHOD(thread_pix_out_10_fu_437_p3);
    sensitive << ( pix_out_1_fu_86 );
    sensitive << ( icmp_ln223_fu_413_p2 );
    sensitive << ( pix_out_8_fu_429_p3 );

    SC_METHOD(thread_pix_out_8_fu_429_p3);
    sensitive << ( borderbuf_q1 );
    sensitive << ( pix_out_fu_82 );
    sensitive << ( and_ln225_fu_424_p2 );

    SC_METHOD(thread_select_ln204_1_fu_308_p3);
    sensitive << ( icmp_ln205_fu_245_p2 );
    sensitive << ( or_ln208_fu_235_p2 );
    sensitive << ( or_ln208_1_fu_302_p2 );

    SC_METHOD(thread_select_ln204_2_fu_320_p3);
    sensitive << ( i6_0_i_i_i_reg_159 );
    sensitive << ( add_ln204_1_fu_261_p2 );
    sensitive << ( icmp_ln205_fu_245_p2 );

    SC_METHOD(thread_select_ln204_fu_271_p3);
    sensitive << ( j_0_i_i_i_reg_170 );
    sensitive << ( icmp_ln205_fu_245_p2 );

    SC_METHOD(thread_select_ln215_fu_372_p3);
    sensitive << ( r_edge_pix_fu_78 );
    sensitive << ( pix_out_1_fu_86 );
    sensitive << ( icmp_ln215_fu_367_p2 );

    SC_METHOD(thread_vconv_V_blk_n);
    sensitive << ( vconv_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( select_ln204_1_reg_533 );
    sensitive << ( icmp_ln211_reg_542 );

    SC_METHOD(thread_vconv_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op63_read_state6 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_vconv_xlim_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_vconv_xlim_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_width_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );

    SC_METHOD(thread_width_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( vconv_xlim_loc_empty_n );

    SC_METHOD(thread_xor_ln223_fu_418_p2);
    sensitive << ( icmp_ln223_fu_413_p2 );

    SC_METHOD(thread_zext_ln204_1_fu_208_p1);
    sensitive << ( i6_0_i_i_i_reg_159 );

    SC_METHOD(thread_zext_ln204_2_fu_316_p1);
    sensitive << ( select_ln204_fu_271_p3 );

    SC_METHOD(thread_zext_ln204_fu_267_p1);
    sensitive << ( add_ln204_1_fu_261_p2 );

    SC_METHOD(thread_zext_ln205_fu_241_p1);
    sensitive << ( j_0_i_i_i_reg_170 );

    SC_METHOD(thread_zext_ln213_fu_354_p1);
    sensitive << ( select_ln204_reg_525_pp0_iter1_reg );

    SC_METHOD(thread_zext_ln228_fu_402_p1);
    sensitive << ( add_ln228_fu_397_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( width_empty_n );
    sensitive << ( height_empty_n );
    sensitive << ( dst_V_TREADY );
    sensitive << ( dst_V_1_state );
    sensitive << ( vconv_xlim_loc_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln204_fu_250_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state10 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    dst_V_1_sel_rd = SC_LOGIC_0;
    dst_V_1_sel_wr = SC_LOGIC_0;
    dst_V_1_state = "00";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_Border_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, width_dout, "(port)width_dout");
    sc_trace(mVcdFile, width_empty_n, "(port)width_empty_n");
    sc_trace(mVcdFile, width_read, "(port)width_read");
    sc_trace(mVcdFile, height_dout, "(port)height_dout");
    sc_trace(mVcdFile, height_empty_n, "(port)height_empty_n");
    sc_trace(mVcdFile, height_read, "(port)height_read");
    sc_trace(mVcdFile, dst_V_TDATA, "(port)dst_V_TDATA");
    sc_trace(mVcdFile, dst_V_TVALID, "(port)dst_V_TVALID");
    sc_trace(mVcdFile, dst_V_TREADY, "(port)dst_V_TREADY");
    sc_trace(mVcdFile, vconv_xlim_loc_dout, "(port)vconv_xlim_loc_dout");
    sc_trace(mVcdFile, vconv_xlim_loc_empty_n, "(port)vconv_xlim_loc_empty_n");
    sc_trace(mVcdFile, vconv_xlim_loc_read, "(port)vconv_xlim_loc_read");
    sc_trace(mVcdFile, vconv_V_dout, "(port)vconv_V_dout");
    sc_trace(mVcdFile, vconv_V_empty_n, "(port)vconv_V_empty_n");
    sc_trace(mVcdFile, vconv_V_read, "(port)vconv_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dst_V_1_data_out, "dst_V_1_data_out");
    sc_trace(mVcdFile, dst_V_1_vld_in, "dst_V_1_vld_in");
    sc_trace(mVcdFile, dst_V_1_vld_out, "dst_V_1_vld_out");
    sc_trace(mVcdFile, dst_V_1_ack_in, "dst_V_1_ack_in");
    sc_trace(mVcdFile, dst_V_1_ack_out, "dst_V_1_ack_out");
    sc_trace(mVcdFile, dst_V_1_payload_A, "dst_V_1_payload_A");
    sc_trace(mVcdFile, dst_V_1_payload_B, "dst_V_1_payload_B");
    sc_trace(mVcdFile, dst_V_1_sel_rd, "dst_V_1_sel_rd");
    sc_trace(mVcdFile, dst_V_1_sel_wr, "dst_V_1_sel_wr");
    sc_trace(mVcdFile, dst_V_1_sel, "dst_V_1_sel");
    sc_trace(mVcdFile, dst_V_1_load_A, "dst_V_1_load_A");
    sc_trace(mVcdFile, dst_V_1_load_B, "dst_V_1_load_B");
    sc_trace(mVcdFile, dst_V_1_state, "dst_V_1_state");
    sc_trace(mVcdFile, dst_V_1_state_cmp_full, "dst_V_1_state_cmp_full");
    sc_trace(mVcdFile, width_blk_n, "width_blk_n");
    sc_trace(mVcdFile, height_blk_n, "height_blk_n");
    sc_trace(mVcdFile, dst_V_TDATA_blk_n, "dst_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln204_reg_516, "icmp_ln204_reg_516");
    sc_trace(mVcdFile, icmp_ln204_reg_516_pp0_iter2_reg, "icmp_ln204_reg_516_pp0_iter2_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, icmp_ln204_reg_516_pp0_iter3_reg, "icmp_ln204_reg_516_pp0_iter3_reg");
    sc_trace(mVcdFile, vconv_xlim_loc_blk_n, "vconv_xlim_loc_blk_n");
    sc_trace(mVcdFile, vconv_V_blk_n, "vconv_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, select_ln204_1_reg_533, "select_ln204_1_reg_533");
    sc_trace(mVcdFile, icmp_ln211_reg_542, "icmp_ln211_reg_542");
    sc_trace(mVcdFile, indvar_flatten_reg_148, "indvar_flatten_reg_148");
    sc_trace(mVcdFile, i6_0_i_i_i_reg_159, "i6_0_i_i_i_reg_159");
    sc_trace(mVcdFile, j_0_i_i_i_reg_170, "j_0_i_i_i_reg_170");
    sc_trace(mVcdFile, width_read_reg_466, "width_read_reg_466");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, height_read_reg_474, "height_read_reg_474");
    sc_trace(mVcdFile, vconv_xlim_loc_read_reg_480, "vconv_xlim_loc_read_reg_480");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln218_fu_193_p2, "add_ln218_fu_193_p2");
    sc_trace(mVcdFile, add_ln218_reg_495, "add_ln218_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln225_fu_198_p2, "add_ln225_fu_198_p2");
    sc_trace(mVcdFile, add_ln225_reg_500, "add_ln225_reg_500");
    sc_trace(mVcdFile, add_ln208_fu_203_p2, "add_ln208_fu_203_p2");
    sc_trace(mVcdFile, add_ln208_reg_505, "add_ln208_reg_505");
    sc_trace(mVcdFile, grp_fu_187_p2, "grp_fu_187_p2");
    sc_trace(mVcdFile, bound_reg_511, "bound_reg_511");
    sc_trace(mVcdFile, icmp_ln204_fu_250_p2, "icmp_ln204_fu_250_p2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op63_read_state6, "ap_predicate_op63_read_state6");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter2, "ap_block_state7_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter3, "ap_block_state8_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter4, "ap_block_state9_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln204_reg_516_pp0_iter1_reg, "icmp_ln204_reg_516_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln204_fu_255_p2, "add_ln204_fu_255_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln204_fu_271_p3, "select_ln204_fu_271_p3");
    sc_trace(mVcdFile, select_ln204_reg_525, "select_ln204_reg_525");
    sc_trace(mVcdFile, select_ln204_reg_525_pp0_iter1_reg, "select_ln204_reg_525_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln204_reg_525_pp0_iter2_reg, "select_ln204_reg_525_pp0_iter2_reg");
    sc_trace(mVcdFile, select_ln204_1_fu_308_p3, "select_ln204_1_fu_308_p3");
    sc_trace(mVcdFile, select_ln204_1_reg_533_pp0_iter1_reg, "select_ln204_1_reg_533_pp0_iter1_reg");
    sc_trace(mVcdFile, select_ln204_2_fu_320_p3, "select_ln204_2_fu_320_p3");
    sc_trace(mVcdFile, icmp_ln211_fu_328_p2, "icmp_ln211_fu_328_p2");
    sc_trace(mVcdFile, icmp_ln211_reg_542_pp0_iter1_reg, "icmp_ln211_reg_542_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln218_fu_333_p2, "icmp_ln218_fu_333_p2");
    sc_trace(mVcdFile, icmp_ln218_reg_546, "icmp_ln218_reg_546");
    sc_trace(mVcdFile, icmp_ln218_reg_546_pp0_iter1_reg, "icmp_ln218_reg_546_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln225_fu_338_p2, "icmp_ln225_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln225_reg_551, "icmp_ln225_reg_551");
    sc_trace(mVcdFile, icmp_ln225_reg_551_pp0_iter1_reg, "icmp_ln225_reg_551_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln225_reg_551_pp0_iter2_reg, "icmp_ln225_reg_551_pp0_iter2_reg");
    sc_trace(mVcdFile, j_fu_343_p2, "j_fu_343_p2");
    sc_trace(mVcdFile, tmp_reg_561, "tmp_reg_561");
    sc_trace(mVcdFile, pix_out_10_fu_437_p3, "pix_out_10_fu_437_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state5, "ap_condition_pp0_exit_iter0_state5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, borderbuf_address0, "borderbuf_address0");
    sc_trace(mVcdFile, borderbuf_ce0, "borderbuf_ce0");
    sc_trace(mVcdFile, borderbuf_we0, "borderbuf_we0");
    sc_trace(mVcdFile, borderbuf_address1, "borderbuf_address1");
    sc_trace(mVcdFile, borderbuf_ce1, "borderbuf_ce1");
    sc_trace(mVcdFile, borderbuf_q1, "borderbuf_q1");
    sc_trace(mVcdFile, zext_ln213_fu_354_p1, "zext_ln213_fu_354_p1");
    sc_trace(mVcdFile, zext_ln228_fu_402_p1, "zext_ln228_fu_402_p1");
    sc_trace(mVcdFile, r_edge_pix_fu_78, "r_edge_pix_fu_78");
    sc_trace(mVcdFile, pix_out_fu_82, "pix_out_fu_82");
    sc_trace(mVcdFile, l_edge_pix_fu_380_p3, "l_edge_pix_fu_380_p3");
    sc_trace(mVcdFile, pix_out_1_fu_86, "pix_out_1_fu_86");
    sc_trace(mVcdFile, select_ln215_fu_372_p3, "select_ln215_fu_372_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_187_p0, "grp_fu_187_p0");
    sc_trace(mVcdFile, grp_fu_187_p1, "grp_fu_187_p1");
    sc_trace(mVcdFile, zext_ln204_1_fu_208_p1, "zext_ln204_1_fu_208_p1");
    sc_trace(mVcdFile, icmp_ln208_2_fu_224_p2, "icmp_ln208_2_fu_224_p2");
    sc_trace(mVcdFile, icmp_ln208_1_fu_218_p2, "icmp_ln208_1_fu_218_p2");
    sc_trace(mVcdFile, icmp_ln208_fu_212_p2, "icmp_ln208_fu_212_p2");
    sc_trace(mVcdFile, and_ln208_fu_229_p2, "and_ln208_fu_229_p2");
    sc_trace(mVcdFile, zext_ln205_fu_241_p1, "zext_ln205_fu_241_p1");
    sc_trace(mVcdFile, add_ln204_1_fu_261_p2, "add_ln204_1_fu_261_p2");
    sc_trace(mVcdFile, icmp_ln205_fu_245_p2, "icmp_ln205_fu_245_p2");
    sc_trace(mVcdFile, zext_ln204_fu_267_p1, "zext_ln204_fu_267_p1");
    sc_trace(mVcdFile, icmp_ln208_5_fu_291_p2, "icmp_ln208_5_fu_291_p2");
    sc_trace(mVcdFile, icmp_ln208_4_fu_285_p2, "icmp_ln208_4_fu_285_p2");
    sc_trace(mVcdFile, icmp_ln208_3_fu_279_p2, "icmp_ln208_3_fu_279_p2");
    sc_trace(mVcdFile, and_ln208_1_fu_296_p2, "and_ln208_1_fu_296_p2");
    sc_trace(mVcdFile, or_ln208_fu_235_p2, "or_ln208_fu_235_p2");
    sc_trace(mVcdFile, or_ln208_1_fu_302_p2, "or_ln208_1_fu_302_p2");
    sc_trace(mVcdFile, zext_ln204_2_fu_316_p1, "zext_ln204_2_fu_316_p1");
    sc_trace(mVcdFile, icmp_ln215_fu_367_p2, "icmp_ln215_fu_367_p2");
    sc_trace(mVcdFile, add_ln228_fu_397_p2, "add_ln228_fu_397_p2");
    sc_trace(mVcdFile, icmp_ln223_fu_413_p2, "icmp_ln223_fu_413_p2");
    sc_trace(mVcdFile, xor_ln223_fu_418_p2, "xor_ln223_fu_418_p2");
    sc_trace(mVcdFile, and_ln225_fu_424_p2, "and_ln225_fu_424_p2");
    sc_trace(mVcdFile, pix_out_8_fu_429_p3, "pix_out_8_fu_429_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_187_p00, "grp_fu_187_p00");
    sc_trace(mVcdFile, grp_fu_187_p10, "grp_fu_187_p10");
#endif

    }
}

Loop_Border_proc::~Loop_Border_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete borderbuf_U;
    delete filter11x11_strm_mul_32ns_32ns_64_3_1_U47;
}

void Loop_Border_proc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Loop_Border_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    !(esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
  esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state5.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dst_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_vld_out.read()))) {
            dst_V_1_sel_rd =  (sc_logic) (~dst_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dst_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_ack_in.read()))) {
            dst_V_1_sel_wr =  (sc_logic) (~dst_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        dst_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, dst_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_2)))) {
            dst_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1)))) {
            dst_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, dst_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_ack_out.read()))))) {
            dst_V_1_state = ap_const_lv2_3;
        } else {
            dst_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_250_p2.read()))) {
        i6_0_i_i_i_reg_159 = select_ln204_2_fu_320_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i6_0_i_i_i_reg_159 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_250_p2.read()))) {
        indvar_flatten_reg_148 = add_ln204_fu_255_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        indvar_flatten_reg_148 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_250_p2.read()))) {
        j_0_i_i_i_reg_170 = j_fu_343_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_i_i_i_reg_170 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln208_reg_505 = add_ln208_fu_203_p2.read();
        add_ln218_reg_495 = add_ln218_fu_193_p2.read();
        add_ln225_reg_500 = add_ln225_fu_198_p2.read();
        bound_reg_511 = grp_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_load_A.read())) {
        dst_V_1_payload_A = pix_out_10_fu_437_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_load_B.read())) {
        dst_V_1_payload_B = pix_out_10_fu_437_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        height_read_reg_474 = height_dout.read();
        vconv_xlim_loc_read_reg_480 = vconv_xlim_loc_dout.read();
        width_read_reg_466 = width_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln204_reg_516 = icmp_ln204_fu_250_p2.read();
        icmp_ln204_reg_516_pp0_iter1_reg = icmp_ln204_reg_516.read();
        icmp_ln211_reg_542_pp0_iter1_reg = icmp_ln211_reg_542.read();
        icmp_ln218_reg_546_pp0_iter1_reg = icmp_ln218_reg_546.read();
        icmp_ln225_reg_551_pp0_iter1_reg = icmp_ln225_reg_551.read();
        select_ln204_1_reg_533_pp0_iter1_reg = select_ln204_1_reg_533.read();
        select_ln204_reg_525_pp0_iter1_reg = select_ln204_reg_525.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln204_reg_516_pp0_iter2_reg = icmp_ln204_reg_516_pp0_iter1_reg.read();
        icmp_ln204_reg_516_pp0_iter3_reg = icmp_ln204_reg_516_pp0_iter2_reg.read();
        icmp_ln225_reg_551_pp0_iter2_reg = icmp_ln225_reg_551_pp0_iter1_reg.read();
        select_ln204_reg_525_pp0_iter2_reg = select_ln204_reg_525_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_250_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_fu_308_p3.read()))) {
        icmp_ln211_reg_542 = icmp_ln211_fu_328_p2.read();
        icmp_ln218_reg_546 = icmp_ln218_fu_333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_fu_250_p2.read()))) {
        icmp_ln225_reg_551 = icmp_ln225_fu_338_p2.read();
        select_ln204_1_reg_533 = select_ln204_1_fu_308_p3.read();
        select_ln204_reg_525 = select_ln204_fu_271_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_reg_533_pp0_iter1_reg.read()))) {
        pix_out_1_fu_86 = select_ln215_fu_372_p3.read();
        pix_out_fu_82 = l_edge_pix_fu_380_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_reg_533.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln211_reg_542.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        r_edge_pix_fu_78 = vconv_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_561 = vconv_V_dout.read();
    }
}

void Loop_Border_proc::thread_add_ln204_1_fu_261_p2() {
    add_ln204_1_fu_261_p2 = (!i6_0_i_i_i_reg_159.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(i6_0_i_i_i_reg_159.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_Border_proc::thread_add_ln204_fu_255_p2() {
    add_ln204_fu_255_p2 = (!indvar_flatten_reg_148.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_148.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Loop_Border_proc::thread_add_ln208_fu_203_p2() {
    add_ln208_fu_203_p2 = (!height_read_reg_474.read().is_01() || !ap_const_lv32_FFFFFFFB.is_01())? sc_lv<32>(): (sc_biguint<32>(height_read_reg_474.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFB));
}

void Loop_Border_proc::thread_add_ln218_fu_193_p2() {
    add_ln218_fu_193_p2 = (!width_read_reg_466.read().is_01() || !ap_const_lv32_FFFFFFF5.is_01())? sc_lv<32>(): (sc_biguint<32>(width_read_reg_466.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFF5));
}

void Loop_Border_proc::thread_add_ln225_fu_198_p2() {
    add_ln225_fu_198_p2 = (!width_read_reg_466.read().is_01() || !ap_const_lv32_FFFFFFFA.is_01())? sc_lv<32>(): (sc_biguint<32>(width_read_reg_466.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFA));
}

void Loop_Border_proc::thread_add_ln228_fu_397_p2() {
    add_ln228_fu_397_p2 = (!select_ln204_reg_525_pp0_iter1_reg.read().is_01() || !ap_const_lv11_7FB.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln204_reg_525_pp0_iter1_reg.read()) + sc_bigint<11>(ap_const_lv11_7FB));
}

void Loop_Border_proc::thread_and_ln208_1_fu_296_p2() {
    and_ln208_1_fu_296_p2 = (icmp_ln208_5_fu_291_p2.read() & icmp_ln208_4_fu_285_p2.read());
}

void Loop_Border_proc::thread_and_ln208_fu_229_p2() {
    and_ln208_fu_229_p2 = (icmp_ln208_2_fu_224_p2.read() & icmp_ln208_1_fu_218_p2.read());
}

void Loop_Border_proc::thread_and_ln225_fu_424_p2() {
    and_ln225_fu_424_p2 = (icmp_ln225_reg_551_pp0_iter2_reg.read() & xor_ln223_fu_418_p2.read());
}

void Loop_Border_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void Loop_Border_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_Border_proc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[5];
}

void Loop_Border_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_Border_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_Border_proc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read()));
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void Loop_Border_proc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void Loop_Border_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read()));
}

void Loop_Border_proc::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
  esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3)));
}

void Loop_Border_proc::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, vconv_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read()));
}

void Loop_Border_proc::thread_ap_block_state7_pp0_stage0_iter2() {
    ap_block_state7_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_reg_516_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_1_ack_in.read()));
}

void Loop_Border_proc::thread_ap_block_state8_pp0_stage0_iter3() {
    ap_block_state8_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_reg_516_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_V_1_ack_in.read()));
}

void Loop_Border_proc::thread_ap_block_state9_pp0_stage0_iter4() {
    ap_block_state9_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_Border_proc::thread_ap_condition_pp0_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln204_fu_250_p2.read())) {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
  esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_Border_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_Border_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_ap_predicate_op63_read_state6() {
    ap_predicate_op63_read_state6 = (esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_reg_533.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln211_reg_542.read()));
}

void Loop_Border_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         !(esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
  esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_address0() {
    borderbuf_address0 =  (sc_lv<11>) (zext_ln213_fu_354_p1.read());
}

void Loop_Border_proc::thread_borderbuf_address1() {
    borderbuf_address1 =  (sc_lv<11>) (zext_ln228_fu_402_p1.read());
}

void Loop_Border_proc::thread_borderbuf_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        borderbuf_ce0 = ap_const_logic_1;
    } else {
        borderbuf_ce0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        borderbuf_ce1 = ap_const_logic_1;
    } else {
        borderbuf_ce1 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_borderbuf_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_reg_533_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln211_reg_542_pp0_iter1_reg.read()))) {
        borderbuf_we0 = ap_const_logic_1;
    } else {
        borderbuf_we0 = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_dst_V_1_ack_in() {
    dst_V_1_ack_in = dst_V_1_state.read()[1];
}

void Loop_Border_proc::thread_dst_V_1_ack_out() {
    dst_V_1_ack_out = dst_V_TREADY.read();
}

void Loop_Border_proc::thread_dst_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, dst_V_1_sel.read())) {
        dst_V_1_data_out = dst_V_1_payload_B.read();
    } else {
        dst_V_1_data_out = dst_V_1_payload_A.read();
    }
}

void Loop_Border_proc::thread_dst_V_1_load_A() {
    dst_V_1_load_A = (dst_V_1_state_cmp_full.read() & ~dst_V_1_sel_wr.read());
}

void Loop_Border_proc::thread_dst_V_1_load_B() {
    dst_V_1_load_B = (dst_V_1_sel_wr.read() & dst_V_1_state_cmp_full.read());
}

void Loop_Border_proc::thread_dst_V_1_sel() {
    dst_V_1_sel = dst_V_1_sel_rd.read();
}

void Loop_Border_proc::thread_dst_V_1_state_cmp_full() {
    dst_V_1_state_cmp_full =  (sc_logic) ((!dst_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(dst_V_1_state.read() != ap_const_lv2_1))[0];
}

void Loop_Border_proc::thread_dst_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_reg_516_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_V_1_vld_in = ap_const_logic_1;
    } else {
        dst_V_1_vld_in = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_dst_V_1_vld_out() {
    dst_V_1_vld_out = dst_V_1_state.read()[0];
}

void Loop_Border_proc::thread_dst_V_TDATA() {
    dst_V_TDATA = dst_V_1_data_out.read();
}

void Loop_Border_proc::thread_dst_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_reg_516_pp0_iter2_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln204_reg_516_pp0_iter3_reg.read())))) {
        dst_V_TDATA_blk_n = dst_V_1_state.read()[1];
    } else {
        dst_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_dst_V_TVALID() {
    dst_V_TVALID = dst_V_1_state.read()[0];
}

void Loop_Border_proc::thread_grp_fu_187_p0() {
    grp_fu_187_p0 =  (sc_lv<32>) (grp_fu_187_p00.read());
}

void Loop_Border_proc::thread_grp_fu_187_p00() {
    grp_fu_187_p00 = esl_zext<64,32>(width_read_reg_466.read());
}

void Loop_Border_proc::thread_grp_fu_187_p1() {
    grp_fu_187_p1 =  (sc_lv<32>) (grp_fu_187_p10.read());
}

void Loop_Border_proc::thread_grp_fu_187_p10() {
    grp_fu_187_p10 = esl_zext<64,32>(height_read_reg_474.read());
}

void Loop_Border_proc::thread_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        height_blk_n = height_empty_n.read();
    } else {
        height_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_height_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        height_read = ap_const_logic_1;
    } else {
        height_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_icmp_ln204_fu_250_p2() {
    icmp_ln204_fu_250_p2 = (!indvar_flatten_reg_148.read().is_01() || !bound_reg_511.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_148.read() == bound_reg_511.read());
}

void Loop_Border_proc::thread_icmp_ln205_fu_245_p2() {
    icmp_ln205_fu_245_p2 = (!zext_ln205_fu_241_p1.read().is_01() || !width_read_reg_466.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln205_fu_241_p1.read()) < sc_bigint<32>(width_read_reg_466.read()));
}

void Loop_Border_proc::thread_icmp_ln208_1_fu_218_p2() {
    icmp_ln208_1_fu_218_p2 = (!i6_0_i_i_i_reg_159.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<1>(): (sc_biguint<11>(i6_0_i_i_i_reg_159.read()) > sc_biguint<11>(ap_const_lv11_5));
}

void Loop_Border_proc::thread_icmp_ln208_2_fu_224_p2() {
    icmp_ln208_2_fu_224_p2 = (!zext_ln204_1_fu_208_p1.read().is_01() || !add_ln208_reg_505.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln204_1_fu_208_p1.read()) < sc_bigint<32>(add_ln208_reg_505.read()));
}

void Loop_Border_proc::thread_icmp_ln208_3_fu_279_p2() {
    icmp_ln208_3_fu_279_p2 = (!add_ln204_1_fu_261_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(add_ln204_1_fu_261_p2.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln208_4_fu_285_p2() {
    icmp_ln208_4_fu_285_p2 = (!add_ln204_1_fu_261_p2.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<1>(): (sc_biguint<11>(add_ln204_1_fu_261_p2.read()) > sc_biguint<11>(ap_const_lv11_5));
}

void Loop_Border_proc::thread_icmp_ln208_5_fu_291_p2() {
    icmp_ln208_5_fu_291_p2 = (!zext_ln204_fu_267_p1.read().is_01() || !add_ln208_reg_505.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln204_fu_267_p1.read()) < sc_bigint<32>(add_ln208_reg_505.read()));
}

void Loop_Border_proc::thread_icmp_ln208_fu_212_p2() {
    icmp_ln208_fu_212_p2 = (!i6_0_i_i_i_reg_159.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_i_i_i_reg_159.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln211_fu_328_p2() {
    icmp_ln211_fu_328_p2 = (!zext_ln204_2_fu_316_p1.read().is_01() || !vconv_xlim_loc_read_reg_480.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln204_2_fu_316_p1.read()) < sc_bigint<32>(vconv_xlim_loc_read_reg_480.read()));
}

void Loop_Border_proc::thread_icmp_ln215_fu_367_p2() {
    icmp_ln215_fu_367_p2 = (!select_ln204_reg_525_pp0_iter1_reg.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(select_ln204_reg_525_pp0_iter1_reg.read() == ap_const_lv11_0);
}

void Loop_Border_proc::thread_icmp_ln218_fu_333_p2() {
    icmp_ln218_fu_333_p2 = (!zext_ln204_2_fu_316_p1.read().is_01() || !add_ln218_reg_495.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln204_2_fu_316_p1.read() == add_ln218_reg_495.read());
}

void Loop_Border_proc::thread_icmp_ln223_fu_413_p2() {
    icmp_ln223_fu_413_p2 = (!select_ln204_reg_525_pp0_iter2_reg.read().is_01() || !ap_const_lv11_6.is_01())? sc_lv<1>(): (sc_biguint<11>(select_ln204_reg_525_pp0_iter2_reg.read()) < sc_biguint<11>(ap_const_lv11_6));
}

void Loop_Border_proc::thread_icmp_ln225_fu_338_p2() {
    icmp_ln225_fu_338_p2 = (!zext_ln204_2_fu_316_p1.read().is_01() || !add_ln225_reg_500.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln204_2_fu_316_p1.read()) < sc_bigint<32>(add_ln225_reg_500.read()));
}

void Loop_Border_proc::thread_j_fu_343_p2() {
    j_fu_343_p2 = (!select_ln204_fu_271_p3.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln204_fu_271_p3.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_Border_proc::thread_l_edge_pix_fu_380_p3() {
    l_edge_pix_fu_380_p3 = (!icmp_ln218_reg_546_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((icmp_ln218_reg_546_pp0_iter1_reg.read()[0].to_bool())? r_edge_pix_fu_78.read(): pix_out_fu_82.read());
}

void Loop_Border_proc::thread_or_ln208_1_fu_302_p2() {
    or_ln208_1_fu_302_p2 = (icmp_ln208_3_fu_279_p2.read() | and_ln208_1_fu_296_p2.read());
}

void Loop_Border_proc::thread_or_ln208_fu_235_p2() {
    or_ln208_fu_235_p2 = (icmp_ln208_fu_212_p2.read() | and_ln208_fu_229_p2.read());
}

void Loop_Border_proc::thread_pix_out_10_fu_437_p3() {
    pix_out_10_fu_437_p3 = (!icmp_ln223_fu_413_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln223_fu_413_p2.read()[0].to_bool())? pix_out_1_fu_86.read(): pix_out_8_fu_429_p3.read());
}

void Loop_Border_proc::thread_pix_out_8_fu_429_p3() {
    pix_out_8_fu_429_p3 = (!and_ln225_fu_424_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln225_fu_424_p2.read()[0].to_bool())? borderbuf_q1.read(): pix_out_fu_82.read());
}

void Loop_Border_proc::thread_select_ln204_1_fu_308_p3() {
    select_ln204_1_fu_308_p3 = (!icmp_ln205_fu_245_p2.read()[0].is_01())? sc_lv<1>(): ((icmp_ln205_fu_245_p2.read()[0].to_bool())? or_ln208_fu_235_p2.read(): or_ln208_1_fu_302_p2.read());
}

void Loop_Border_proc::thread_select_ln204_2_fu_320_p3() {
    select_ln204_2_fu_320_p3 = (!icmp_ln205_fu_245_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln205_fu_245_p2.read()[0].to_bool())? i6_0_i_i_i_reg_159.read(): add_ln204_1_fu_261_p2.read());
}

void Loop_Border_proc::thread_select_ln204_fu_271_p3() {
    select_ln204_fu_271_p3 = (!icmp_ln205_fu_245_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln205_fu_245_p2.read()[0].to_bool())? j_0_i_i_i_reg_170.read(): ap_const_lv11_0);
}

void Loop_Border_proc::thread_select_ln215_fu_372_p3() {
    select_ln215_fu_372_p3 = (!icmp_ln215_fu_367_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln215_fu_367_p2.read()[0].to_bool())? r_edge_pix_fu_78.read(): pix_out_1_fu_86.read());
}

void Loop_Border_proc::thread_vconv_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, select_ln204_1_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln211_reg_542.read()))) {
        vconv_V_blk_n = vconv_V_empty_n.read();
    } else {
        vconv_V_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_vconv_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op63_read_state6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        vconv_V_read = ap_const_logic_1;
    } else {
        vconv_V_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_vconv_xlim_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        vconv_xlim_loc_blk_n = vconv_xlim_loc_empty_n.read();
    } else {
        vconv_xlim_loc_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_vconv_xlim_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        vconv_xlim_loc_read = ap_const_logic_1;
    } else {
        vconv_xlim_loc_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        width_blk_n = width_empty_n.read();
    } else {
        width_blk_n = ap_const_logic_1;
    }
}

void Loop_Border_proc::thread_width_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
        width_read = ap_const_logic_1;
    } else {
        width_read = ap_const_logic_0;
    }
}

void Loop_Border_proc::thread_xor_ln223_fu_418_p2() {
    xor_ln223_fu_418_p2 = (icmp_ln223_fu_413_p2.read() ^ ap_const_lv1_1);
}

void Loop_Border_proc::thread_zext_ln204_1_fu_208_p1() {
    zext_ln204_1_fu_208_p1 = esl_zext<32,11>(i6_0_i_i_i_reg_159.read());
}

void Loop_Border_proc::thread_zext_ln204_2_fu_316_p1() {
    zext_ln204_2_fu_316_p1 = esl_zext<32,11>(select_ln204_fu_271_p3.read());
}

void Loop_Border_proc::thread_zext_ln204_fu_267_p1() {
    zext_ln204_fu_267_p1 = esl_zext<32,11>(add_ln204_1_fu_261_p2.read());
}

void Loop_Border_proc::thread_zext_ln205_fu_241_p1() {
    zext_ln205_fu_241_p1 = esl_zext<32,11>(j_0_i_i_i_reg_170.read());
}

void Loop_Border_proc::thread_zext_ln213_fu_354_p1() {
    zext_ln213_fu_354_p1 = esl_zext<64,11>(select_ln204_reg_525_pp0_iter1_reg.read());
}

void Loop_Border_proc::thread_zext_ln228_fu_402_p1() {
    zext_ln228_fu_402_p1 = esl_zext<64,11>(add_ln228_fu_397_p2.read());
}

void Loop_Border_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, width_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, height_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, vconv_xlim_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln204_fu_250_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln204_fu_250_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_V_TREADY.read()) && 
  esl_seteq<1,2,2>(dst_V_1_state.read(), ap_const_lv2_3))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

