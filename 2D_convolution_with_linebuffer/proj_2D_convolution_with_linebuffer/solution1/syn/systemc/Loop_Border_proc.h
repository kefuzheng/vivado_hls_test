// ==============================================================
// RTL generated by Scout HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.0
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_Border_proc_HH_
#define _Loop_Border_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter11x11_strm_mul_32ns_32ns_64_3_1.h"
#include "Loop_Border_proc_borderbuf.h"

namespace ap_rtl {

struct Loop_Border_proc : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > width_dout;
    sc_in< sc_logic > width_empty_n;
    sc_out< sc_logic > width_read;
    sc_in< sc_lv<32> > height_dout;
    sc_in< sc_logic > height_empty_n;
    sc_out< sc_logic > height_read;
    sc_out< sc_lv<32> > dst_V_TDATA;
    sc_out< sc_logic > dst_V_TVALID;
    sc_in< sc_logic > dst_V_TREADY;
    sc_in< sc_lv<32> > vconv_xlim_loc_dout;
    sc_in< sc_logic > vconv_xlim_loc_empty_n;
    sc_out< sc_logic > vconv_xlim_loc_read;
    sc_in< sc_lv<32> > vconv_V_dout;
    sc_in< sc_logic > vconv_V_empty_n;
    sc_out< sc_logic > vconv_V_read;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Loop_Border_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_Border_proc);

    ~Loop_Border_proc();

    sc_trace_file* mVcdFile;

    Loop_Border_proc_borderbuf* borderbuf_U;
    filter11x11_strm_mul_32ns_32ns_64_3_1<1,3,32,32,64>* filter11x11_strm_mul_32ns_32ns_64_3_1_U42;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > dst_V_1_data_out;
    sc_signal< sc_logic > dst_V_1_vld_in;
    sc_signal< sc_logic > dst_V_1_vld_out;
    sc_signal< sc_logic > dst_V_1_ack_in;
    sc_signal< sc_logic > dst_V_1_ack_out;
    sc_signal< sc_lv<32> > dst_V_1_payload_A;
    sc_signal< sc_lv<32> > dst_V_1_payload_B;
    sc_signal< sc_logic > dst_V_1_sel_rd;
    sc_signal< sc_logic > dst_V_1_sel_wr;
    sc_signal< sc_logic > dst_V_1_sel;
    sc_signal< sc_logic > dst_V_1_load_A;
    sc_signal< sc_logic > dst_V_1_load_B;
    sc_signal< sc_lv<2> > dst_V_1_state;
    sc_signal< sc_logic > dst_V_1_state_cmp_full;
    sc_signal< sc_logic > width_blk_n;
    sc_signal< sc_logic > height_blk_n;
    sc_signal< sc_logic > dst_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln203_reg_516;
    sc_signal< sc_lv<1> > icmp_ln203_reg_516_pp0_iter2_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > icmp_ln203_reg_516_pp0_iter3_reg;
    sc_signal< sc_logic > vconv_xlim_loc_blk_n;
    sc_signal< sc_logic > vconv_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > select_ln203_1_reg_533;
    sc_signal< sc_lv<1> > icmp_ln210_reg_542;
    sc_signal< sc_lv<64> > indvar_flatten_reg_148;
    sc_signal< sc_lv<11> > i6_0_i_i_i_reg_159;
    sc_signal< sc_lv<11> > j_0_i_i_i_reg_170;
    sc_signal< sc_lv<32> > width_read_reg_466;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > height_read_reg_474;
    sc_signal< sc_lv<32> > vconv_xlim_loc_read_reg_480;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > add_ln217_fu_193_p2;
    sc_signal< sc_lv<32> > add_ln217_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > add_ln224_fu_198_p2;
    sc_signal< sc_lv<32> > add_ln224_reg_500;
    sc_signal< sc_lv<32> > add_ln207_fu_203_p2;
    sc_signal< sc_lv<32> > add_ln207_reg_505;
    sc_signal< sc_lv<64> > grp_fu_187_p2;
    sc_signal< sc_lv<64> > bound_reg_511;
    sc_signal< sc_lv<1> > icmp_ln203_fu_250_p2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op63_read_state6;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln203_reg_516_pp0_iter1_reg;
    sc_signal< sc_lv<64> > add_ln203_fu_255_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<11> > select_ln203_fu_271_p3;
    sc_signal< sc_lv<11> > select_ln203_reg_525;
    sc_signal< sc_lv<11> > select_ln203_reg_525_pp0_iter1_reg;
    sc_signal< sc_lv<11> > select_ln203_reg_525_pp0_iter2_reg;
    sc_signal< sc_lv<1> > select_ln203_1_fu_308_p3;
    sc_signal< sc_lv<1> > select_ln203_1_reg_533_pp0_iter1_reg;
    sc_signal< sc_lv<11> > select_ln203_2_fu_320_p3;
    sc_signal< sc_lv<1> > icmp_ln210_fu_328_p2;
    sc_signal< sc_lv<1> > icmp_ln210_reg_542_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln217_fu_333_p2;
    sc_signal< sc_lv<1> > icmp_ln217_reg_546;
    sc_signal< sc_lv<1> > icmp_ln217_reg_546_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln224_fu_338_p2;
    sc_signal< sc_lv<1> > icmp_ln224_reg_551;
    sc_signal< sc_lv<1> > icmp_ln224_reg_551_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln224_reg_551_pp0_iter2_reg;
    sc_signal< sc_lv<11> > j_fu_343_p2;
    sc_signal< sc_lv<32> > tmp_reg_561;
    sc_signal< sc_lv<32> > pix_out_10_fu_437_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<11> > borderbuf_address0;
    sc_signal< sc_logic > borderbuf_ce0;
    sc_signal< sc_logic > borderbuf_we0;
    sc_signal< sc_lv<11> > borderbuf_address1;
    sc_signal< sc_logic > borderbuf_ce1;
    sc_signal< sc_lv<32> > borderbuf_q1;
    sc_signal< sc_lv<64> > zext_ln212_fu_354_p1;
    sc_signal< sc_lv<64> > zext_ln227_fu_402_p1;
    sc_signal< sc_lv<32> > r_edge_pix_fu_78;
    sc_signal< sc_lv<32> > pix_out_fu_82;
    sc_signal< sc_lv<32> > l_edge_pix_fu_380_p3;
    sc_signal< sc_lv<32> > pix_out_1_fu_86;
    sc_signal< sc_lv<32> > select_ln214_fu_372_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_187_p0;
    sc_signal< sc_lv<32> > grp_fu_187_p1;
    sc_signal< sc_lv<32> > zext_ln203_1_fu_208_p1;
    sc_signal< sc_lv<1> > icmp_ln207_2_fu_224_p2;
    sc_signal< sc_lv<1> > icmp_ln207_1_fu_218_p2;
    sc_signal< sc_lv<1> > icmp_ln207_fu_212_p2;
    sc_signal< sc_lv<1> > and_ln207_fu_229_p2;
    sc_signal< sc_lv<32> > zext_ln204_fu_241_p1;
    sc_signal< sc_lv<11> > add_ln203_1_fu_261_p2;
    sc_signal< sc_lv<1> > icmp_ln204_fu_245_p2;
    sc_signal< sc_lv<32> > zext_ln203_fu_267_p1;
    sc_signal< sc_lv<1> > icmp_ln207_5_fu_291_p2;
    sc_signal< sc_lv<1> > icmp_ln207_4_fu_285_p2;
    sc_signal< sc_lv<1> > icmp_ln207_3_fu_279_p2;
    sc_signal< sc_lv<1> > and_ln207_1_fu_296_p2;
    sc_signal< sc_lv<1> > or_ln207_fu_235_p2;
    sc_signal< sc_lv<1> > or_ln207_1_fu_302_p2;
    sc_signal< sc_lv<32> > zext_ln203_2_fu_316_p1;
    sc_signal< sc_lv<1> > icmp_ln214_fu_367_p2;
    sc_signal< sc_lv<11> > add_ln227_fu_397_p2;
    sc_signal< sc_lv<1> > icmp_ln222_fu_413_p2;
    sc_signal< sc_lv<1> > xor_ln222_fu_418_p2;
    sc_signal< sc_lv<1> > and_ln224_fu_424_p2;
    sc_signal< sc_lv<32> > pix_out_8_fu_429_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > grp_fu_187_p00;
    sc_signal< sc_lv<64> > grp_fu_187_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFF5;
    static const sc_lv<32> ap_const_lv32_FFFFFFFA;
    static const sc_lv<32> ap_const_lv32_FFFFFFFB;
    static const sc_lv<11> ap_const_lv11_5;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_7FB;
    static const sc_lv<11> ap_const_lv11_6;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln203_1_fu_261_p2();
    void thread_add_ln203_fu_255_p2();
    void thread_add_ln207_fu_203_p2();
    void thread_add_ln217_fu_193_p2();
    void thread_add_ln224_fu_198_p2();
    void thread_add_ln227_fu_397_p2();
    void thread_and_ln207_1_fu_296_p2();
    void thread_and_ln207_fu_229_p2();
    void thread_and_ln224_fu_424_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10();
    void thread_ap_block_state5_pp0_stage0_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp0_stage0_iter3();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op63_read_state6();
    void thread_ap_ready();
    void thread_borderbuf_address0();
    void thread_borderbuf_address1();
    void thread_borderbuf_ce0();
    void thread_borderbuf_ce1();
    void thread_borderbuf_we0();
    void thread_dst_V_1_ack_in();
    void thread_dst_V_1_ack_out();
    void thread_dst_V_1_data_out();
    void thread_dst_V_1_load_A();
    void thread_dst_V_1_load_B();
    void thread_dst_V_1_sel();
    void thread_dst_V_1_state_cmp_full();
    void thread_dst_V_1_vld_in();
    void thread_dst_V_1_vld_out();
    void thread_dst_V_TDATA();
    void thread_dst_V_TDATA_blk_n();
    void thread_dst_V_TVALID();
    void thread_grp_fu_187_p0();
    void thread_grp_fu_187_p00();
    void thread_grp_fu_187_p1();
    void thread_grp_fu_187_p10();
    void thread_height_blk_n();
    void thread_height_read();
    void thread_icmp_ln203_fu_250_p2();
    void thread_icmp_ln204_fu_245_p2();
    void thread_icmp_ln207_1_fu_218_p2();
    void thread_icmp_ln207_2_fu_224_p2();
    void thread_icmp_ln207_3_fu_279_p2();
    void thread_icmp_ln207_4_fu_285_p2();
    void thread_icmp_ln207_5_fu_291_p2();
    void thread_icmp_ln207_fu_212_p2();
    void thread_icmp_ln210_fu_328_p2();
    void thread_icmp_ln214_fu_367_p2();
    void thread_icmp_ln217_fu_333_p2();
    void thread_icmp_ln222_fu_413_p2();
    void thread_icmp_ln224_fu_338_p2();
    void thread_j_fu_343_p2();
    void thread_l_edge_pix_fu_380_p3();
    void thread_or_ln207_1_fu_302_p2();
    void thread_or_ln207_fu_235_p2();
    void thread_pix_out_10_fu_437_p3();
    void thread_pix_out_8_fu_429_p3();
    void thread_select_ln203_1_fu_308_p3();
    void thread_select_ln203_2_fu_320_p3();
    void thread_select_ln203_fu_271_p3();
    void thread_select_ln214_fu_372_p3();
    void thread_vconv_V_blk_n();
    void thread_vconv_V_read();
    void thread_vconv_xlim_loc_blk_n();
    void thread_vconv_xlim_loc_read();
    void thread_width_blk_n();
    void thread_width_read();
    void thread_xor_ln222_fu_418_p2();
    void thread_zext_ln203_1_fu_208_p1();
    void thread_zext_ln203_2_fu_316_p1();
    void thread_zext_ln203_fu_267_p1();
    void thread_zext_ln204_fu_241_p1();
    void thread_zext_ln212_fu_354_p1();
    void thread_zext_ln227_fu_402_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
