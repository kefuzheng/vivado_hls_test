// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.2.0
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_VConvH_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        height_dout,
        height_empty_n,
        height_read,
        vconv_xlim_loc_dout,
        vconv_xlim_loc_empty_n,
        vconv_xlim_loc_read,
        hconv_V_dout,
        hconv_V_empty_n,
        hconv_V_read,
        vconv_V_din,
        vconv_V_full_n,
        vconv_V_write,
        height_out_din,
        height_out_full_n,
        height_out_write,
        vconv_xlim_loc_out_din,
        vconv_xlim_loc_out_full_n,
        vconv_xlim_loc_out_write
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] height_dout;
input   height_empty_n;
output   height_read;
input  [31:0] vconv_xlim_loc_dout;
input   vconv_xlim_loc_empty_n;
output   vconv_xlim_loc_read;
input  [31:0] hconv_V_dout;
input   hconv_V_empty_n;
output   hconv_V_read;
output  [31:0] vconv_V_din;
input   vconv_V_full_n;
output   vconv_V_write;
output  [31:0] height_out_din;
input   height_out_full_n;
output   height_out_write;
output  [31:0] vconv_xlim_loc_out_din;
input   vconv_xlim_loc_out_full_n;
output   vconv_xlim_loc_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg height_read;
reg vconv_xlim_loc_read;
reg hconv_V_read;
reg vconv_V_write;
reg height_out_write;
reg vconv_xlim_loc_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    linebuf_0_ce0;
reg    linebuf_0_we0;
wire   [31:0] linebuf_0_q0;
reg    linebuf_1_ce0;
reg    linebuf_1_we0;
wire   [31:0] linebuf_1_q0;
reg    linebuf_2_ce0;
reg    linebuf_2_we0;
wire   [31:0] linebuf_2_q0;
reg    linebuf_3_ce0;
reg    linebuf_3_we0;
wire   [31:0] linebuf_3_q0;
reg    linebuf_4_ce0;
reg    linebuf_4_we0;
wire   [31:0] linebuf_4_q0;
reg    linebuf_5_ce0;
reg    linebuf_5_we0;
wire   [31:0] linebuf_5_q0;
reg    linebuf_6_ce0;
reg    linebuf_6_we0;
wire   [31:0] linebuf_6_q0;
reg    linebuf_7_ce0;
reg    linebuf_7_we0;
wire   [31:0] linebuf_7_q0;
reg    linebuf_8_ce0;
reg    linebuf_8_we0;
wire   [31:0] linebuf_8_q0;
reg    linebuf_9_ce0;
reg    linebuf_9_we0;
wire   [31:0] linebuf_9_q0;
wire   [3:0] filt11_coeff_address0;
reg    filt11_coeff_ce0;
wire   [9:0] filt11_coeff_q0;
reg    height_blk_n;
reg    vconv_xlim_loc_blk_n;
reg    hconv_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln186_fu_356_p2;
reg    vconv_V_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln191_fu_381_p2;
reg   [0:0] icmp_ln197_reg_464;
reg    height_out_blk_n;
reg    vconv_xlim_loc_out_blk_n;
reg   [31:0] height_read_reg_446;
reg    ap_block_state1;
reg   [31:0] vconv_xlim_loc_read_reg_451;
wire   [10:0] col_fu_340_p2;
reg   [10:0] col_reg_459;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln197_fu_346_p2;
wire   [0:0] icmp_ln185_fu_335_p2;
wire   [10:0] row_fu_361_p2;
reg   [10:0] row_reg_471;
reg    ap_block_state3;
reg   [31:0] tmp_1_reg_476;
reg   [10:0] linebuf_0_addr_reg_481;
reg   [10:0] linebuf_1_addr_reg_486;
reg   [10:0] linebuf_2_addr_reg_491;
reg   [10:0] linebuf_3_addr_reg_496;
reg   [10:0] linebuf_4_addr_reg_501;
reg   [10:0] linebuf_5_addr_reg_506;
reg   [10:0] linebuf_6_addr_reg_511;
reg   [10:0] linebuf_7_addr_reg_516;
reg   [10:0] linebuf_8_addr_reg_521;
reg   [10:0] linebuf_9_addr_reg_526;
wire   [3:0] i_fu_387_p2;
reg   [3:0] i_reg_534;
reg    ap_predicate_op73_write_state4;
reg    ap_block_state4;
reg   [31:0] linebuf_0_load_reg_539;
wire    ap_CS_fsm_state5;
reg   [31:0] linebuf_1_load_reg_544;
reg   [31:0] linebuf_2_load_reg_549;
reg   [31:0] linebuf_3_load_reg_554;
reg   [31:0] linebuf_4_load_reg_559;
reg   [31:0] linebuf_5_load_reg_564;
reg   [31:0] linebuf_6_load_reg_569;
reg   [31:0] linebuf_7_load_reg_574;
reg   [31:0] linebuf_8_load_reg_579;
reg   [31:0] linebuf_9_load_reg_584;
wire  signed [31:0] vwin_val_fu_420_p3;
reg   [31:0] vwin_val_reg_594;
wire    ap_CS_fsm_state6;
reg   [9:0] filt11_coeff_load_reg_609;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] mul_ln193_reg_619;
wire    ap_CS_fsm_state9;
wire   [31:0] out_val_fu_435_p2;
wire    ap_CS_fsm_state10;
reg   [10:0] col1_0_i_i_i_reg_284;
reg   [10:0] row2_0_i_i_i_reg_295;
reg   [31:0] tmp_reg_306;
reg   [3:0] i5_0_i_i_i_reg_319;
wire   [63:0] zext_ln192_fu_367_p1;
wire   [63:0] zext_ln193_fu_393_p1;
wire   [0:0] icmp_ln194_fu_440_p2;
wire   [31:0] zext_ln185_fu_331_p1;
wire   [31:0] zext_ln186_fu_352_p1;
wire   [0:0] icmp_ln192_fu_398_p2;
wire   [31:0] tmp_4_fu_404_p12;
wire   [9:0] grp_fu_430_p1;
reg   [9:0] ap_NS_fsm;
wire   [31:0] grp_fu_430_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
end

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_0_addr_reg_481),
    .ce0(linebuf_0_ce0),
    .we0(linebuf_0_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_0_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_1_addr_reg_486),
    .ce0(linebuf_1_ce0),
    .we0(linebuf_1_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_1_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_2_addr_reg_491),
    .ce0(linebuf_2_ce0),
    .we0(linebuf_2_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_2_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_3_addr_reg_496),
    .ce0(linebuf_3_ce0),
    .we0(linebuf_3_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_3_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_4_addr_reg_501),
    .ce0(linebuf_4_ce0),
    .we0(linebuf_4_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_4_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_5_addr_reg_506),
    .ce0(linebuf_5_ce0),
    .we0(linebuf_5_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_5_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_6_addr_reg_511),
    .ce0(linebuf_6_ce0),
    .we0(linebuf_6_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_6_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_7_addr_reg_516),
    .ce0(linebuf_7_ce0),
    .we0(linebuf_7_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_7_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_8_addr_reg_521),
    .ce0(linebuf_8_ce0),
    .we0(linebuf_8_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_8_q0)
);

Loop_VConvH_proc_linebuf_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_9_addr_reg_526),
    .ce0(linebuf_9_ce0),
    .we0(linebuf_9_we0),
    .d0(vwin_val_reg_594),
    .q0(linebuf_9_q0)
);

Loop_VConvH_proc_filt11_coeff #(
    .DataWidth( 10 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
filt11_coeff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filt11_coeff_address0),
    .ce0(filt11_coeff_ce0),
    .q0(filt11_coeff_q0)
);

filter11x11_strm_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
filter11x11_strm_mux_104_32_1_1_U30(
    .din0(linebuf_0_load_reg_539),
    .din1(linebuf_1_load_reg_544),
    .din2(linebuf_2_load_reg_549),
    .din3(linebuf_3_load_reg_554),
    .din4(linebuf_4_load_reg_559),
    .din5(linebuf_5_load_reg_564),
    .din6(linebuf_6_load_reg_569),
    .din7(linebuf_7_load_reg_574),
    .din8(linebuf_8_load_reg_579),
    .din9(linebuf_9_load_reg_584),
    .din10(i5_0_i_i_i_reg_319),
    .dout(tmp_4_fu_404_p12)
);

filter11x11_strm_mul_32s_10ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 32 ))
filter11x11_strm_mul_32s_10ns_32_3_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(vwin_val_reg_594),
    .din1(grp_fu_430_p1),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln185_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        col1_0_i_i_i_reg_284 <= 11'd0;
    end else if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd0))) begin
        col1_0_i_i_i_reg_284 <= col_reg_459;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i5_0_i_i_i_reg_319 <= i_reg_534;
    end else if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
        i5_0_i_i_i_reg_319 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln191_fu_381_p2 == 1'd1))) begin
        row2_0_i_i_i_reg_295 <= row_reg_471;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln185_fu_335_p2 == 1'd1))) begin
        row2_0_i_i_i_reg_295 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_reg_306 <= out_val_fu_435_p2;
    end else if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
        tmp_reg_306 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        col_reg_459 <= col_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        filt11_coeff_load_reg_609 <= filt11_coeff_q0;
        vwin_val_reg_594 <= vwin_val_fu_420_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read_reg_446 <= height_dout;
        vconv_xlim_loc_read_reg_451 <= vconv_xlim_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_534 <= i_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln185_fu_335_p2 == 1'd1))) begin
        icmp_ln197_reg_464 <= icmp_ln197_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
        linebuf_0_addr_reg_481 <= zext_ln192_fu_367_p1;
        linebuf_1_addr_reg_486 <= zext_ln192_fu_367_p1;
        linebuf_2_addr_reg_491 <= zext_ln192_fu_367_p1;
        linebuf_3_addr_reg_496 <= zext_ln192_fu_367_p1;
        linebuf_4_addr_reg_501 <= zext_ln192_fu_367_p1;
        linebuf_5_addr_reg_506 <= zext_ln192_fu_367_p1;
        linebuf_6_addr_reg_511 <= zext_ln192_fu_367_p1;
        linebuf_7_addr_reg_516 <= zext_ln192_fu_367_p1;
        linebuf_8_addr_reg_521 <= zext_ln192_fu_367_p1;
        linebuf_9_addr_reg_526 <= zext_ln192_fu_367_p1;
        tmp_1_reg_476 <= hconv_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        linebuf_0_load_reg_539 <= linebuf_0_q0;
        linebuf_1_load_reg_544 <= linebuf_1_q0;
        linebuf_2_load_reg_549 <= linebuf_2_q0;
        linebuf_3_load_reg_554 <= linebuf_3_q0;
        linebuf_4_load_reg_559 <= linebuf_4_q0;
        linebuf_5_load_reg_564 <= linebuf_5_q0;
        linebuf_6_load_reg_569 <= linebuf_6_q0;
        linebuf_7_load_reg_574 <= linebuf_7_q0;
        linebuf_8_load_reg_579 <= linebuf_8_q0;
        linebuf_9_load_reg_584 <= linebuf_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mul_ln193_reg_619 <= grp_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3))) begin
        row_reg_471 <= row_fu_361_p2;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        filt11_coeff_ce0 = 1'b1;
    end else begin
        filt11_coeff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
        hconv_V_blk_n = hconv_V_empty_n;
    end else begin
        hconv_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
        hconv_V_read = 1'b1;
    end else begin
        hconv_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_blk_n = height_out_full_n;
    end else begin
        height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_out_write = 1'b1;
    end else begin
        height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_0_ce0 = 1'b1;
    end else begin
        linebuf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd1) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_0_we0 = 1'b1;
    end else begin
        linebuf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_1_ce0 = 1'b1;
    end else begin
        linebuf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd2) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_1_we0 = 1'b1;
    end else begin
        linebuf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_2_ce0 = 1'b1;
    end else begin
        linebuf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd3) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_2_we0 = 1'b1;
    end else begin
        linebuf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_3_ce0 = 1'b1;
    end else begin
        linebuf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd4) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_3_we0 = 1'b1;
    end else begin
        linebuf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_4_ce0 = 1'b1;
    end else begin
        linebuf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd5) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_4_we0 = 1'b1;
    end else begin
        linebuf_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_5_ce0 = 1'b1;
    end else begin
        linebuf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd6) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_5_we0 = 1'b1;
    end else begin
        linebuf_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_6_ce0 = 1'b1;
    end else begin
        linebuf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd7) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_6_we0 = 1'b1;
    end else begin
        linebuf_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_7_ce0 = 1'b1;
    end else begin
        linebuf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd8) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_7_we0 = 1'b1;
    end else begin
        linebuf_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_8_ce0 = 1'b1;
    end else begin
        linebuf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i5_0_i_i_i_reg_319 == 4'd9) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_8_we0 = 1'b1;
    end else begin
        linebuf_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4)))) begin
        linebuf_9_ce0 = 1'b1;
    end else begin
        linebuf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(i5_0_i_i_i_reg_319 == 4'd9) & ~(i5_0_i_i_i_reg_319 == 4'd8) & ~(i5_0_i_i_i_reg_319 == 4'd7) & ~(i5_0_i_i_i_reg_319 == 4'd6) & ~(i5_0_i_i_i_reg_319 == 4'd5) & ~(i5_0_i_i_i_reg_319 == 4'd4) & ~(i5_0_i_i_i_reg_319 == 4'd3) & ~(i5_0_i_i_i_reg_319 == 4'd2) & ~(i5_0_i_i_i_reg_319 == 4'd1) & (icmp_ln194_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        linebuf_9_we0 = 1'b1;
    end else begin
        linebuf_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln197_reg_464 == 1'd1) & (icmp_ln191_fu_381_p2 == 1'd1))) begin
        vconv_V_blk_n = vconv_V_full_n;
    end else begin
        vconv_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (ap_predicate_op73_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        vconv_V_write = 1'b1;
    end else begin
        vconv_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_blk_n = vconv_xlim_loc_empty_n;
    end else begin
        vconv_xlim_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_out_blk_n = vconv_xlim_loc_out_full_n;
    end else begin
        vconv_xlim_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_out_write = 1'b1;
    end else begin
        vconv_xlim_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        vconv_xlim_loc_read = 1'b1;
    end else begin
        vconv_xlim_loc_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln185_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln186_fu_356_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln191_fu_381_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln191_fu_381_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((vconv_xlim_loc_out_full_n == 1'b0) | (height_out_full_n == 1'b0) | (vconv_xlim_loc_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((hconv_V_empty_n == 1'b0) & (icmp_ln186_fu_356_p2 == 1'd1));
end

always @ (*) begin
    ap_block_state4 = ((vconv_V_full_n == 1'b0) & (ap_predicate_op73_write_state4 == 1'b1));
end

always @ (*) begin
    ap_predicate_op73_write_state4 = ((icmp_ln197_reg_464 == 1'd1) & (icmp_ln191_fu_381_p2 == 1'd1));
end

assign col_fu_340_p2 = (col1_0_i_i_i_reg_284 + 11'd1);

assign filt11_coeff_address0 = zext_ln193_fu_393_p1;

assign grp_fu_430_p1 = grp_fu_430_p10;

assign grp_fu_430_p10 = filt11_coeff_load_reg_609;

assign height_out_din = height_dout;

assign i_fu_387_p2 = (i5_0_i_i_i_reg_319 + 4'd1);

assign icmp_ln185_fu_335_p2 = (($signed(zext_ln185_fu_331_p1) < $signed(height_read_reg_446)) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_356_p2 = (($signed(zext_ln186_fu_352_p1) < $signed(vconv_xlim_loc_read_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_381_p2 = ((i5_0_i_i_i_reg_319 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_398_p2 = ((i5_0_i_i_i_reg_319 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_440_p2 = ((i5_0_i_i_i_reg_319 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_346_p2 = ((col1_0_i_i_i_reg_284 > 11'd9) ? 1'b1 : 1'b0);

assign out_val_fu_435_p2 = (mul_ln193_reg_619 + tmp_reg_306);

assign row_fu_361_p2 = (row2_0_i_i_i_reg_295 + 11'd1);

assign vconv_V_din = tmp_reg_306;

assign vconv_xlim_loc_out_din = vconv_xlim_loc_dout;

assign vwin_val_fu_420_p3 = ((icmp_ln192_fu_398_p2[0:0] === 1'b1) ? tmp_4_fu_404_p12 : tmp_1_reg_476);

assign zext_ln185_fu_331_p1 = col1_0_i_i_i_reg_284;

assign zext_ln186_fu_352_p1 = row2_0_i_i_i_reg_295;

assign zext_ln192_fu_367_p1 = row2_0_i_i_i_reg_295;

assign zext_ln193_fu_393_p1 = i5_0_i_i_i_reg_319;

endmodule //Loop_VConvH_proc
